plugins {
    id 'java'
    id 'application'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

group 'dev.mayuna'
version 'b1.2'
mainClassName = "dev.mayuna.modularbot.ModularBot"

repositories {
    mavenCentral()

    maven { url "https://m2.chew.pro/snapshots" }
}

dependencies {
    // JDA
    implementation('net.dv8tion:JDA:5.0.0-alpha.17') {
        exclude module: 'opus-java'
    }

    // JDA Chewutils
    implementation "pw.chew:jda-chewtils:2.0-SNAPSHOT"

    // Personal libraries
    implementation 'dev.mayuna:mayus-jda-utilities:3.0-beta'
    implementation 'dev.mayuna:mayus-library:2.0.1'
    implementation 'dev.mayuna:mayus-json-utilities:1.3.1'
    implementation 'dev.mayuna:pumpk1n:1.1'

    // SLF4J
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'

    // GSON
    implementation 'com.google.code.gson:gson:2.9.0'

    // Guava
    implementation 'com.google.guava:guava:31.1-jre'

    // SQLite
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'

    // JCL2
    implementation 'org.xeustechnologies:jcl-core:2.8'

    // Javassist
    implementation 'org.javassist:javassist:3.29.0-GA'

    // HikariCP
    implementation 'com.zaxxer:HikariCP:5.0.1'

    // MySQL
    implementation 'mysql:mysql-connector-java:8.0.29'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    // Apache Commons Lang
    testImplementation 'org.apache.commons:commons-lang3:3.12.0'

    // JUnit
    testImplementation 'org.junit.platform:junit-platform-launcher:1.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

// == Quick tasks == //

task publishCloseAndRelease() {
    dependsOn 'publishToSonatype'
    dependsOn 'closeAndReleaseSonatypeStagingRepository'
}

shadowJar {
    archiveName = 'moduler-discord-bot.jar'

    manifest {
        attributes 'Main-Class': 'dev.mayuna.modularbot.ModularBot'
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform();
}
// == Maven publishing == //

publishing {

    publications {
        shadow(MavenPublication) {
            groupId = 'dev.mayuna'
            artifactId = 'modular-discord-bot'
            version = getVersion()
            from components.java

            pom {
                name = 'ModularDiscordBot'
                description = 'Modular Discord Bot'
                url = 'https://github.com/lilmayu/ModularDiscordBot'

                scm {
                    connection = 'scm:https://github.com/lilmayu/ModularDiscordBot'
                    developerConnection = 'scm:git:https://github.com/lilmayu/ModularDiscordBot.git'
                    url = 'https://github.com/lilmayu/ModularDiscordBot'
                }

                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.html'
                    }
                }

                developers {
                    developer {
                        id = 'mayuna'
                        name = 'Marek Lof'
                        email = 'uwulilmayu@gmail.com'
                    }
                }
            }
        }
    }

    publishing {
        repositories {
            maven {
                credentials {
                    username = "$ossrhUsername"
                    password = "$ossrhPassword"
                }

                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
        }
    }
}

signing {
    sign publishing.publications.shadow
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = "$ossrhUsername"
            password = "$ossrhPassword"
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar.dependsOn javadocJar
shadowJar.dependsOn sourcesJar
shadowJar.dependsOn jar

components.java.withVariantsFromConfiguration(configurations.shadowRuntimeElements) {
    skip()
}